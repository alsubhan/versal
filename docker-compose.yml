services:
  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file:
      - .env
    environment:
      - DEBUG=false
      - SUPABASE_INTERNAL_URL=${SUPABASE_INTERNAL_URL:-http://supabase-kong:8000}
      - SUPABASE_PUBLIC_URL=${SUPABASE_PUBLIC_URL:-http://localhost:${SUPABASE_PUBLIC_PORT:-7001}}
      - SUPABASE_SERVICE_KEY=${SUPABASE_SERVICE_KEY}
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
    ports:
      - "${BACKEND_PORT:-8000}:8000"
    restart: unless-stopped

  web:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        VITE_API_BASE_URL: ${VITE_API_BASE_URL:-/api}
    ports:
      - "${FRONTEND_PORT:-80}:80"
    depends_on:
      - api
    restart: unless-stopped

  # --- Supabase (self-hosted) ---
  supabase-db:
    image: supabase/postgres:15.1.1.78
    container_name: supabase-db
    environment:
      - POSTGRES_PASSWORD=${SUPABASE_DB_PASSWORD:-postgres}
      - POSTGRES_DB=postgres
    volumes:
      - supabase-db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 20

  supabase-auth:
    image: supabase/gotrue:v2.158.0
    container_name: supabase-auth
    depends_on:
      - supabase-db
    environment:
      - GOTRUE_SITE_URL=${SUPABASE_PUBLIC_URL:-http://localhost:${SUPABASE_PUBLIC_PORT:-7001}}
      - GOTRUE_API_HOST=0.0.0.0
      - GOTRUE_API_PORT=9999
      - GOTRUE_DB_DRIVER=postgres
      - GOTRUE_DB_DATABASE_URL=postgres://postgres:${SUPABASE_DB_PASSWORD:-postgres}@supabase-db:5432/postgres
      - GOTRUE_JWT_SECRET=${SUPABASE_JWT_SECRET:-super-secret-jwt}
      - GOTRUE_DISABLE_SIGNUP=${SUPABASE_DISABLE_SIGNUP:-false}
      - GOTRUE_MAILER_AUTOCONFIRM=${SUPABASE_MAILER_AUTOCONFIRM:-true}

  supabase-rest:
    image: postgrest/postgrest:v12.0.2
    container_name: supabase-rest
    depends_on:
      - supabase-db
    environment:
      - PGRST_DB_URI=postgres://postgres:${SUPABASE_DB_PASSWORD:-postgres}@supabase-db:5432/postgres
      - PGRST_DB_SCHEMA=public,storage
      - PGRST_DB_ANON_ROLE=anon
      - PGRST_JWT_SECRET=${SUPABASE_JWT_SECRET:-super-secret-jwt}
      - PGRST_SERVER_PORT=3000

  supabase-realtime:
    image: supabase/realtime:v2.25.69
    container_name: supabase-realtime
    depends_on:
      - supabase-db
    environment:
      - PORT=4000
      - DB_HOST=supabase-db
      - DB_NAME=postgres
      - DB_USER=postgres
      - DB_PASSWORD=${SUPABASE_DB_PASSWORD:-postgres}
      - DB_PORT=5432
      - JWT_SECRET=${SUPABASE_JWT_SECRET:-super-secret-jwt}

  supabase-meta:
    image: supabase/postgres-meta:v0.80.0
    container_name: supabase-meta
    depends_on:
      - supabase-db
    environment:
      - PG_META_PORT=8080
      - PG_META_DB_HOST=supabase-db
      - PG_META_DB_PORT=5432
      - PG_META_DB_NAME=postgres
      - PG_META_DB_USER=postgres
      - PG_META_DB_PASSWORD=${SUPABASE_DB_PASSWORD:-postgres}

  supabase-storage:
    image: supabase/storage-api:v2.8.8
    container_name: supabase-storage
    depends_on:
      - supabase-rest
    environment:
      - ANON_KEY=${SUPABASE_ANON_KEY}
      - SERVICE_KEY=${SUPABASE_SERVICE_KEY}
      - POSTGREST_URL=http://supabase-rest:3000
      - PGRST_JWT_SECRET=${SUPABASE_JWT_SECRET:-super-secret-jwt}
      - DATABASE_URL=postgres://postgres:${SUPABASE_DB_PASSWORD:-postgres}@supabase-db:5432/postgres
      - REGION=local
      - GLOBAL_S3_BUCKET=versal-local
      - TENANT_ID=local
      - PORT=5000

  supabase-kong:
    image: kong:2.8
    container_name: supabase-kong
    depends_on:
      - supabase-auth
      - supabase-rest
      - supabase-realtime
      - supabase-storage
      - supabase-meta
    environment:
      - KONG_DATABASE=off
      - KONG_DECLARATIVE_CONFIG=/etc/kong/kong.yml
      - KONG_LOG_LEVEL=info
      - KONG_PROXY_LISTEN=0.0.0.0:8000, 0.0.0.0:8443 ssl
      - KONG_NGINX_WORKER_PROCESSES=1
    volumes:
      - ./supabase/kong.yml:/etc/kong/kong.yml:ro
    ports:
      - "${SUPABASE_PUBLIC_PORT:-7001}:8000"
    restart: unless-stopped

  supabase-studio:
    image: supabase/studio:20240528-106c43d
    container_name: supabase-studio
    depends_on:
      - supabase-kong
      - supabase-meta
    environment:
      - SUPABASE_URL=${SUPABASE_PUBLIC_URL:-http://localhost:${SUPABASE_PUBLIC_PORT:-7001}}
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      - STUDIO_PG_META_URL=http://supabase-meta:8080
    ports:
      - "${SUPABASE_STUDIO_PORT:-7002}:3000"
    restart: unless-stopped

networks:
  default:
    name: versal-net

volumes:
  supabase-db-data:
